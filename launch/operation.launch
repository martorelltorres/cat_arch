<launch>
  <arg name="namespace_arg" default="/xiroi" />
  <arg name="simulateGps" default="True"/>
  
  <group ns="$(arg namespace_arg)">
    <!-- CONFIGURATION ARGUMENTS -->
    <arg name="turbot_mission"  default="true"/>

    <!-- VEHICLE FRAMES -->
    <rosparam command="load" file="$(find xiroi)/config/xiroi_frames.yaml"/>

    <!-- NED Origin -->
    <arg name="place" default="emissari.yaml"/>
    <arg name="placesDir" default="$(find xiroi)/config/places"/>
    <rosparam command="load" file="$(arg placesDir)/$(arg place)"/>  
    <node pkg="tf" type="static_transform_publisher" name="utm2map" args="0 0 0 0 0 0 1 utm map 100"/>

    <!--DYNAMICS -->
    <rosparam command="load" file="$(find xiroi)/config/robot_dynamics.yaml"/>
    <node name="robot_dynamics" pkg="xiroi" type="robot_dynamics.py" respawn="false" output="screen">
       <remap from="/control/thrusters_data" to="/setpoints"/>
    </node>
    <!--CONTROL-->
    <!--TELEOPERATION-->
    <include file="$(find xiroi)/launch/teleoperation.launch"/>
    <!--SAFETY-->
    <!-- <include file="$(find xiroi)/launch/safety.launch"/> -->

    <!--SENSORS-->
    <!--IMU-->
    <include file="$(find xiroi)/launch/imu.launch"/>
    <!--ATX Power Source-->
    <!-- <include file="$(find m4atx_battery_monitor)/launch/m4atx_battery_monitor.launch"/> -->
    <!--EMLID GPS:publishes /sensors/gps (/sensors/gps_buoy_emlid_raw)-->
    <!-- <include file="$(find emlid_reach_tcp)/launch/emlid_gps.launch"/> -->

    <!-- <group if="$(arg simulateGps)">
      <node  name="nav_sat_pub" pkg="xiroi" type="nav_sat_pub" respawn="true">
        <param name="frame_id" value="xiroi"/>
        <param name="topic_name" value="sensors/gps"/>
        <param name="use_ned_origin" value="true"/>
      </node>
    </group> -->

    <!--USBL: publishes nav_sts info (/navigation/nav_sts_acoustic)-->
    <!-- <include file="$(find evologics_ros_sync)/launch/evo_gs.launch"/> -->
    <!-- MULTIMASTER: publishes nav_sts -->
    <!-- <node   type="master_discovery" name="master_discovery" >
      <param name="_mcast_group" value="224.0.0.1"/>
    </node>
    <rosparam command="load" file="$(find xiroi)/config/master_sync/sync_groundstation.yaml"/>
    <rosparam command="load" file="$(find xiroi)/config/master_sync/sync_turbot.yaml"/>
    <rosparam command="load" file="$(find xiroi)/config/master_sync/sync_xiroi.yaml"/>
    <rosparam command="load" file="$(find xiroi)/config/master_sync/sync_groundstation_topics.yaml"/> 
    <rosparam command="load" file="$(find xiroi)/config/master_sync/sync_turbot_topics.yaml"/>
    <rosparam command="load" file="$(find xiroi)/config/master_sync/sync_xiroi_topics.yaml"/>
    <node name="master_sync" pkg="master_sync_fkie" type="master_sync" output="screen"/> -->

     <!--OPERATION NODE-->
    <!-- <node name="operator" pkg="xiroi" type="operator.py" respawn="false" output="screen"/> -->
    <node name="follower" pkg="xiroi" type="follower.py" respawn="false" output="screen"/>

    <!--ROBOT LOCALIZATION-->
    <rosparam command="load" file="$(find xiroi)/config/robot_localization_operation.yaml" />
    <!--continuous data sensors odom->xiroi-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_odom" clear_params="true">
      <remap from="odometry/filtered" to="odometry/filtered_odom"/>
    </node>
    <!--continuous data sensors + GPS  map->odom-->
    <node pkg="robot_localization" type="ekf_localization_node" name="ekf_map" clear_params="true">
      <remap from="odometry/filtered" to="odometry/filtered_map"/>
    </node>
    <!--navsat_transform_node-->
    <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" respawn="true"> 
      <param name="magnetic_declination_radians" value="0"/>
      <param name="yaw_offset" value="0"/>
      <remap from="imu/data" to="sensors/imu" />
      <remap from="gps/fix" to="sensors/gps" />
      <remap from="odometry/filtered" to="odometry/filtered_odom" /> 
      <remap from="odometry/gps" to="/xiroi/sensors/gps_odom"/>
     </node>

  </group>

</launch>